# -*- Makefile -*-

# This makefile contains definitions and rules that are common to all 
# makefiles in the source code sub-directories.  This file is included in 
# makefiles in these directories.  The variable RELATIVE_PATH should be 
# defined before inclusion, this is the path relative to this location.  

# Add the location of the stlib.  You may need to edit this value.
CXXINCLUDE += -I$(RELATIVE_PATH)/../src

# If we are using the boost library.
ifdef BOOST
CXXINCLUDE += -I$(RELATIVE_PATH)/../src/third-party/boost/tr1 -I$(RELATIVE_PATH)/../src/third-party
CXXFLAGS += -DBOOST
LINKERFLAGS += -DBOOST
endif

# You probably won't need to edit below here.

# The default compiler.  Override by setting with CXX=...
CXX = g++
CXXFLAGS += $(CXXINCLUDE)
# Activate all debugging code. 
CXXFLAGS += -DSTLIB_DEBUG -g

SOURCES = $(wildcard *.cc)
DEPENDENCIES = $(SOURCES:.cc=.d)
TARGETS = $(SOURCES:.cc=.exe)
#TESTS = $(SOURCES:.cc=.run)

.SUFFIXES:
#.SUFFIXES: .cc .d .o .exe .run
.SUFFIXES: .cc .d .o .exe

# The default target.  Compile the test code.
all: $(TARGETS)

clean: 
	$(RM) *.o *.d *~ core* *.stackdump

distclean: 
	$(MAKE) clean 
	$(RM) $(TARGETS)

again: 
	$(MAKE) distclean 
	$(MAKE) 

.DUMMY: run
run: $(TARGETS)
	python $(RELATIVE_PATH)/TestRunner.py

# Implicit rules.

.cc.d: 
	$(CXX) -MM $(CXXFLAGS) $< > $@.$$$$; \
  sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
  $(RM) $@.$$$$

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),distclean)
-include $(DEPENDENCIES)
endif
endif

.cc.o: 
	$(CXX) $(CXXFLAGS) -c $< 

.o.exe:
	$(CXX) $(LINKERFLAGS) -o $@ $<

#.exe.run:
#	@if ./$< >/dev/null; \
#          then echo "Success with $<"; else echo "Failure with $<"; fi
